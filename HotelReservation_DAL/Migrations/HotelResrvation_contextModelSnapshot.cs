// <auto-generated />
using System;
using HotelReservation_DAL.DataContxt;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HotelReservation_DAL.Migrations
{
    [DbContext(typeof(HotelResrvation_context))]
    partial class HotelResrvation_contextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HotelReservation_DAL.Models.Reservation", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("reservationDate")
                        .HasColumnType("Date");

                    b.Property<int>("room_id")
                        .HasColumnType("int");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("room_id");

                    b.HasIndex("user_id");

                    b.ToTable("reservations");
                });

            modelBuilder.Entity("HotelReservation_DAL.Models.Room", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("finger_no")
                        .HasColumnType("int");

                    b.Property<int>("floor_no")
                        .HasColumnType("int");

                    b.Property<bool>("is_vip")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.HasKey("id");

                    b.ToTable("rooms");

                    b.HasData(
                        new
                        {
                            id = 1,
                            finger_no = 1,
                            floor_no = 1,
                            is_vip = false
                        },
                        new
                        {
                            id = 2,
                            finger_no = 2,
                            floor_no = 1,
                            is_vip = false
                        },
                        new
                        {
                            id = 3,
                            finger_no = 3,
                            floor_no = 2,
                            is_vip = false
                        },
                        new
                        {
                            id = 4,
                            finger_no = 5,
                            floor_no = 2,
                            is_vip = true
                        });
                });

            modelBuilder.Entity("HotelReservation_DAL.Models.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("id");

                    b.ToTable("users");

                    b.HasData(
                        new
                        {
                            id = 1,
                            Email = "Amani.nabil@hotmail.com",
                            name = "Amany Nabil"
                        },
                        new
                        {
                            id = 2,
                            Email = "Ahmed.M@hotmail.com",
                            name = "Ahmed Mohamed"
                        },
                        new
                        {
                            id = 3,
                            Email = "Ali.Said@hotmail.com",
                            name = "Ali Said"
                        },
                        new
                        {
                            id = 4,
                            Email = "Tamer.M@hotmail.com",
                            name = "Tamed Mohamed"
                        });
                });

            modelBuilder.Entity("HotelReservation_DAL.Models.Reservation", b =>
                {
                    b.HasOne("HotelReservation_DAL.Models.Room", "room")
                        .WithMany("Reservations")
                        .HasForeignKey("room_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelReservation_DAL.Models.User", "user")
                        .WithMany("Reservations")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("room");

                    b.Navigation("user");
                });

            modelBuilder.Entity("HotelReservation_DAL.Models.Room", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("HotelReservation_DAL.Models.User", b =>
                {
                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
